library(rgdal)#
library(maptools)#
library(spatstat)#
library(MASS)#
library(mi)#
load("~/Documents/EstimatingMigrationFlows/Simulations/countyfips1990.rda")#
source('~/Documents/EstimatingMigrationFlows/Simulations/census2000api.R')#
source('~/Documents/EstimatingMigrationFlows/Simulations/census2010api.R')#
source('~/Documents/EstimatingMigrationFlows/Simulations/census1990.R')
key<-"d7a1f5a0dab7becd14752cafb4742fb990616241"
mncounty<-CensusData1990(varlist<-c("P0010001","H0010001"),fipscode="27",level="county",key)
head(mncounty)
dim(mncounty)
install.packages("gregmisc")
install.packages("gregmisc",type="source")
install.packages(c(‘gdata’, ‘gmodels’, ‘gplots’, ‘gtools’))
install.packages(c("gdata", "gmodels", "gplots", "gtools"))
load("~/Documents/EstimatingMigrationFlows/Simulations/censusData/minnesota_1990.rda")
ls()
load("~/Documents/EstimatingMigrationFlows/Simulations/censusData/minnesota_1990.rda")#
load("~/Documents/EstimatingMigrationFlows/Simulations/censusData/minnesota_2000.rda")#
load("~/Documents/EstimatingMigrationFlows/Simulations/censusData/minnesota_2010.rda")
ls()
head(d1990)
ls()
head(d2000)
m<-match(MN$fips,rownames(d2000))
library(rgdal)#
library(maptools)#
library(spatstat)#
library(MASS)#
library(mi)#
library(sna)#
#
######################
##### US Counties#
######################
setwd("~/Documents/EstimatingMigrationFlows/Simulations/co99_d00_shp")#
#ogrInfo(dsn="~/Documents/EstimatingMigrationFlows/Simulations/co99_d00_shp", layer="co99_d00")#
UScounty<-readOGR(dsn=".",layer="co99_d00",stringsAsFactors=FALSE)#
######################
##### MN Counties#
######################
MN<-UScounty[UScounty$STATE=="27",]#
proj4string(MN)<-" +proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs +towgs84=0,0,0"#
MN$fips<-paste(MN$STATE,MN$COUNTY,sep="")
m<-match(MN$fips,rownames(d2000))
m
data<-cbind(MN@data,d1990[m,-c(1:3)],d2000[m,-which(colnames(d2000)%in%c("D2000_state","D2000_county"))],d2010[m,-which(colnames(d2010)%in%c("D2010_state","D2010_county"))])
length(m)
head(data)#
#
MN@data<-data#
MN<-MN[-which(MN$AREA==min(MN$AREA[which(MN$COUNTY%in%names(which(table(MN$COUNTY)>1)))])),]
head(MN@data)
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/migrationrecord.rda")#
### migrationrecord#
### gvectorize(migmat,censor.as.na=FALSE)#
#
MN_IRS<-lapply(migrationrecord,function(x){#
index<-which(substr(rownames(x),1,2)%in%"27")#
x[index,index]#
})#
names(MN_IRS)
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/Mig1990indexed.rda")#
index<-which(substr(rownames(migmat),1,2)%in%"27")#
MN1990mig<-migmat[index,index]
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/Mig1990indexed.rda")#
index<-which(substr(rownames(migmat),1,2)%in%"27")#
MN1990mig<-migmat[index,index]
ls()
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/Mig2000.rda")
ls()
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/Mig2000.rda")#
index<-which(substr(rownames(migmat),1,2)%in%"27")#
MN2000mig<-migmat[index,index]
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/Mig2010indexed.rda")
ls()
load("~/Documents/EstimatingMigrationFlows/Simulations/MigFlow/Mig2010indexed.rda")#
index<-which(substr(rownames(migmat),1,2)%in%"27")#
MN2010mig<-migmat[index,index]
sum(MN2000mig==MN2010mig)
head(MN_IRS)
names(MN_IRS)
sum(MN1990mig)
sum(MN2000mig)
sum(MN2010mig)
diag(MN2000mig)
diag(MN1990mig)
diag(MN1990mig)<-0
diag(MN2010mig)<-0
sum(MN1990mig)
sum(MN2010mig)
sum(MN1990mig)
ls()
names(MN_IRS)
y1<-gvectorize(MN1990mig,censor.as.na=FALSE)#
y2<-gvectorize(MN2000mig,censor.as.na=FALSE)#
y3<-gvectorize(MN2010mig,censor.as.na=FALSE)
cbind(1:length(names(MN_IRS)#
), names(MN_IRS)#
)
IRS2000equiv<-MN_IRS[[3]]+MN_IRS[[4]]+MN_IRS[[5]]+MN_IRS[[6]]+MN_IRS[[7]]
IRS2000equiv<-MN_IRS[[3]]+MN_IRS[[4]]+MN_IRS[[5]]+MN_IRS[[6]]+MN_IRS[[7]]#
irsNam<-rownames(IRS2000equiv)#
censusNam<-rownames(MN2000mig)#
index<-irsNam%in%censusNam#
IRS2000equivMod<-IRS2000equiv[index,index]#
diag(IRS2000equivMod)<-0#
g1<-gvectorize(IRS2000equivMod,censor.as.na=FALSE)#
g2<-gvectorize(MN2000mig,censor.as.na=FALSE)#
#
cor(g1,g2)
summary(g2~g1)
summary(lm(g2~g1))
plot(g2,g1,pch=19)
cbind(1:length(names(MN_IRS)),names(MN_IRS))
IRS2000equiv<-MN_IRS[[4]]+MN_IRS[[5]]+MN_IRS[[6]]+MN_IRS[[7]]+MN_IRS[[8]]#
irsNam<-rownames(IRS2000equiv)#
censusNam<-rownames(MN2000mig)#
index<-irsNam%in%censusNam#
IRS2000equivMod<-IRS2000equiv[index,index]#
diag(IRS2000equivMod)<-0#
g1<-gvectorize(IRS2000equivMod,censor.as.na=FALSE)#
g2<-gvectorize(MN2000mig,censor.as.na=FALSE)#
#
cor(g1,g2)
IRS2000equiv<-MN_IRS[[5]]+MN_IRS[[6]]+MN_IRS[[7]]+MN_IRS[[8]]#
irsNam<-rownames(IRS2000equiv)#
censusNam<-rownames(MN2000mig)#
index<-irsNam%in%censusNam#
IRS2000equivMod<-IRS2000equiv[index,index]#
diag(IRS2000equivMod)<-0#
g1<-gvectorize(IRS2000equivMod,censor.as.na=FALSE)#
g2<-gvectorize(MN2000mig,censor.as.na=FALSE)#
#
cor(g1,g2)
sum(y1)
sum(y2)
sum(y3)
length(y3)
length(y2)
sum(is.na(y3))
5*227591
227591*3
help(mi.count)
IRS00eqiv<-gvectorize(IRS2000equivMod,censor.as.na=FALSE)
IRS95eqiv<-gvectorize(IRS1995equiv,censor.as.na=FALSE)
IRS1995equiv<-MN_IRS[[1]]+MN_IRS[[2]]+MN_IRS[[3]]+MN_IRS[[4]]#
irsNam<-rownames(IRS1995equiv)#
censusNam<-rownames(MN2000mig)#
index<-irsNam%in%censusNam#
IRS1995equiv<-IRS1995equiv[index,index]#
diag(IRS1995equiv)<-0#
IRS95eqiv<-gvectorize(IRS1995equiv,censor.as.na=FALSE)
mig5year<-c(y1,rep(NA,length(y1),y2)#
mig5yearIRS<-c(rep(0,length(y1),IRS95eqiv,IRS00eqiv)
mig5year<-c(y1,rep(NA,length(y1)),y2)#
mig5yearIRS<-c(rep(0,length(y1),IRS95eqiv,IRS00eqiv)
)
mig5year<-c(y1,rep(NA,length(y1)),y2)#
mig5yearIRS<-c(rep(0,length(y1)),IRS95eqiv,IRS00eqiv)
length(mig5year)
length(mig5yearIRS)
test<-data.frame(mig5year,mig5yearIRS)
head(test)
mi.count(mig5year~mig5yearIRS,data=test)
model.test<-mi.count(mig5year~mig5yearIRS,data=test)
class(model.test)
summary(model.test)
names(model.test)
test.mi<-mi(test)
summary(test.mi)
test.mi
head(test.mi)
missing.pattern.plot(test, gray.scale = TRUE)
info <- mi.info(test)
info
IMP <- mi(test, preprocess = TRUE)
IMP <- mi(test)
plot(IMP )
help(bayesglm.mi)
hist(y1)
help(bayesglm.mi)
fit<-bayesglm.mi(mig5year~mig5yearIRS,IMP,family=poisson(link = "log"))
help(mi.info()
)
help(mi.info)
help(mi)
plot(IMP )
help(bayesglm.mi)
IMP <- mi(test,check.coef.convergence=TRUE,add.noise=FALSE)
IMP <- mi(test,check.coef.convergence=TRUE,add.noise=FALSE)
summary(IMP )
IMP
plot(IMP)
IMP <- mi(test,add.noise=FALSE)
plot(IMP)
help(IMP)
help(mi)
IMP<- mi.count(mig5year~mig5yearIRS, data = test)
plot(IMP)
IMP
fit<-bayesglm.mi(mig5year~mig5yearIRS,IMP,family=poisson(link = "log"))
help(mi.count)
IMP<- mi(mi.count(mig5year~mig5yearIRS, data = test))
IMP<- as.mi(mi.count(mig5year~mig5yearIRS, data = test))
IMP<- mi.count(mig5year~mig5yearIRS, data = test,missing.index=which(is.na(test$mig5year)))
IMP
plot(IMP)
IMP <- mi(test,add.noise=FALSE,n.imp = 6)
fit<-glm.mi(mig5year~mig5yearIRS,IMP,family=poisson(link = "log"))
IMP.dat.all <- mi.completed(IMP)
head(IMP.dat.all)
class(IMP.dat.all)
show(IMP.dat.all[[1]])
class(IMP.dat.all[[1]])
head(IMP.dat.all[[1]])
sum(IMP.dat.all[[1]]$mig5year<0)
fit<-lm(mig5year~mig5yearIRS,IMP)
fit
summary(fit)
fit<-lm.mi(mig5year~mig5yearIRS,IMP)
summary(fit)
fit
summary(fit$Chain6)
fit$Chain6
fit@mi.pooled
summary(fit@mi.pooled)
head(MN$data)
head(MN@data)
head(MN@data[,which(substr(colnames(MN@data,1,5)%in%c("D2000"))])
head(MN@data[,which(substr(colnames(MN@data,1,5)%in%c("D2000"))])
which(substr(colnames(MN@data,1,5)%in%c("D2000"))
)
which(substr(colnames(MN@data,1,5))%in%c("D2000"))
which(substr(colnames(MN@data),1,5)%in%c("D2000"))
head(MN@data[,which(substr(colnames(MN@data),1,5)%in%c("D2000"))])
RecPop<-sapply(MN$D2000_P001001,rep,length(D2000_P001001))#
RecPop<-gvectorize(RecPop,censor.as.na=FALSE)#
SenderPop<-t(sapply(MN$D2000_P001001,rep,length(D2000_P001001)))#
SenderPop<-gvectorize(SenderPop,censor.as.na=FALSE)
RecPop<-sapply(MN$D2000_P001001,rep,length(MN$D2000_P001001))#
RecPop<-gvectorize(RecPop,censor.as.na=FALSE)#
SenderPop<-t(sapply(MN$D2000_P001001,rep,length(MN$D2000_P001001)))#
SenderPop<-gvectorize(SenderPop,censor.as.na=FALSE)
summary(pois<-glm(y1~IRS00eqiv+RecPop+SenderPop, family = "poisson"))#
summary(nb<- <- glm.nb(y1~IRS00eqiv+RecPop+SenderPop))
summary(pois<-glm(y1~IRS00eqiv+RecPop+SenderPop, family = "poisson"))#
summary(nb<-glm.nb(y1~IRS00eqiv+RecPop+SenderPop))
warnings()
summary(lm<-lm(y1~IRS00eqiv+RecPop+SenderPop))
plot(lm)
par(mfrow=c(2,2))#
plot(pois)
par(mfrow=c(2,2))#
plot(nb)
help(nb)
help(glm.nb)
AIC(nb)
AIC(pois)
AIC(lm)
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")
help(predict)
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="link")
help(predict)
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="terms")
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="link")
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50))
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")
predict(pois,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")
predict(lm,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")
summary(lm<-lm(y2~IRS00eqiv+RecPop+SenderPop))#
summary(pois<-glm(y2~IRS00eqiv+RecPop+SenderPop, family = "poisson"))#
summary(nb<-glm.nb(y2~IRS00eqiv+RecPop+SenderPop))
predict(pois,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")#
predict(nb,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")#
predict(lm,data.frame(IRS00eqiv=0,RecPop=100,SenderPop=50),type="response")
par(mfrow=c(2,2))#
plot(lm)
par(mfrow=c(2,2))#
plot(pois)
par(mfrow=c(2,2))#
plot(nb)
hist(SenderPop)
hist(RecPop)
head(cbind(y1,IRS00eqiv,RecPop,SenderPop))
library(UScensus2000tract)
install.packages("Uscensus2000tract")
install.packages("UScensus2000tract")
library(UScensus2000tract)#
data(minnesota.tract)
ls()
source('census2000api.R')#
key<-"d7a1f5a0dab7becd14752cafb4742fb990616241"#
var2000<-#
c("P001001","P003001","P003003","P003004","P003005","P003006","P003007","P003008","P012002","P012026")#
mn2000<-get2000CensusData(c(var2000[1:8],"P012002","P012026"),fips="27",level="tract", key)
source('~/Documents/EstimatingMigrationFlows/Simulations/census2000api.R', chdir = TRUE)
key<-"d7a1f5a0dab7becd14752cafb4742fb990616241"#
var2000<-#
c("P001001","P003001","P003003","P003004","P003005","P003006","P003007","P003008","P012002","P012026")
var2000
mn2000<-get2000CensusData(var2000,fips="27",level="tract", key)
head(minnesota.tract@data)
state<-as.character(minnesota.tract$state)#
county<-as.character(minnesota.tract$county)#
tract<-as.character(minnesota.tract$tract)#
tract[nchar(tract)==4]<-paste("00",tract[nchar(tract)==4],sep="")
fips<-paste(state,county,tract,sep="")
match(fips,rownames(mn2000))
rownames(mn2000)
state<-as.character(minnesota.tract$state)#
county<-as.character(minnesota.tract$county)#
tract<-as.character(minnesota.tract$tract)#
tract[nchar(tract)==4]<-paste(tract[nchar(tract)==4],"00",sep="")#
fips<-paste(state,county,tract,sep="")
match(fips,rownames(mn2000))
head(minnesota.tract$data[1:5,])
head(minnesota.tract@data[1:5,])
head(minnesota.tract@data[1:5,1:5])
head(mn2000[m,])
m<-match(rownames(mn2000),fips)
head(minnesota.tract@data[1:5,1:5])
head(mn2000[m,])
state<-as.character(minnesota.tract$state)#
county<-as.character(minnesota.tract$county)#
tract<-as.character(minnesota.tract$tract)#
tract[nchar(tract)==4]<-paste(tract[nchar(tract)==4],"00",sep="")#
fips<-paste(state,county,tract,sep="")#
m<-match(rownames(mn2000),fips)
m
head(minnesota@data[,1:5])#
head(mn2000[m,])
head(minnesota.tract@data[,1:5])#
head(mn2000[m,])
head(minnesota.tract@data[m,1:5])#
head(mn2000)
length(m)
nrow(minnesota.tract@data)
m<-match(fips,rownames(mn2000))
m
length(m)
length(fips)
dim(minnesota.tract$data)
dim(minnesota.tract@data)
head(minnesota.tract@data[m,1:5])#
head(mn2000)
head(minnesota.tract@data[,1:5])#
head(mn2000[m,])
m<-match(fips,rownames(mn2000))#
#
head(minnesota.tract@data[,1:5])#
head(mn2000[m,])
class(cbind(fips,mn2000))
class(cbind(fips,mn2000[m,]))
head(cbind(fips,mn2000[m,]))
minnesota.tract@data<-cbind(fips,mn2000[m,])
head(minnesota.tract@data)
install.packages("geoRglm")
